(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{282:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"ssh原理与运用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh原理与运用"}},[s._v("#")]),s._v(" SSH原理与运用")]),s._v(" "),t("h2",{attrs:{id:"什么是ssh？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是ssh？"}},[s._v("#")]),s._v(" 什么是SSH？")]),s._v(" "),t("p",[s._v("简单说，SSH是一种网络协议，用于计算机之间的加密登录。")]),s._v(" "),t("p",[s._v("如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。")]),s._v(" "),t("p",[s._v("最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。")]),s._v(" "),t("h2",{attrs:{id:"基础的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础的用法"}},[s._v("#")]),s._v(" 基础的用法")]),s._v(" "),t("p",[s._v("SSH主要用于远程登录。假定你要以用户名user，登录远程主机host，只要一条简单命令就可以了。")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" user@host\n")])])]),t("p",[s._v("如果本地用户名与远程用户名一致，登录时可以省略用户名。")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("\n")])])]),t("p",[s._v("SSH的默认端口是22，也就是说，你的登录请求会送进远程主机的22端口。使用p参数，可以修改这个端口。")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v(" user@host\n")])])]),t("h2",{attrs:{id:"口令登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#口令登录"}},[s._v("#")]),s._v(" 口令登录")]),s._v(" "),t("p",[s._v("如果你是第一次登录对方主机，系统会出现下面的提示：")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" user@host\nThe authenticity of "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'github.com (13.250.177.223)'")]),s._v(" can't be established.\nRSA key fingerprint is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(":2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.\nAre you sure you want to "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("continue")]),s._v(" connecting "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("yes/no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("?\n")])])]),t("p",[s._v("这段话的意思是，无法确认host主机的真实性，只知道它的公钥指纹，问你还想继续连接吗？")]),s._v(" "),t("p",[s._v('所谓"公钥指纹"，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是98:2e:d7:e0🇩🇪9f:ac:67:28:c2:42:2d:37:16:58:4d，再进行比较，就容易多了。')]),s._v(" "),t("p",[s._v("很自然的一个问题就是，用户怎么知道远程主机的公钥指纹应该是多少？回答是没有好办法，远程主机必须在自己的网站上贴出公钥指纹，以便用户自行核对。")]),s._v(" "),t("p",[s._v("假定经过风险衡量以后，用户决定接受这个远程主机的公钥。")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Are you sure you want to "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("continue")]),s._v(" connecting "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("yes/no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("? "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])]),t("p",[s._v("系统会出现一句提示，表示host主机已经得到认可。")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Warning: Permanently added "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'github.com (13.250.177.223)'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RSA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to the list of known hosts.\n")])])]),t("p",[s._v("然后，会要求输入密码。")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Password: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("enter password"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("如果密码正确，就可以登录了。")]),s._v(" "),t("p",[s._v("当远程主机的公钥被接受以后，它就会被保存在文件$HOME/.ssh/known_hosts之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。")]),s._v(" "),t("p",[s._v("每个SSH用户都有自己的known_hosts文件，此外系统也有一个这样的文件，通常是/etc/ssh/ssh_known_hosts，保存一些对所有用户都可信赖的远程主机的公钥。")]),s._v(" "),t("h2",{attrs:{id:"公钥登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公钥登录"}},[s._v("#")]),s._v(" 公钥登录")]),s._v(" "),t("p",[s._v("使用密码登录，每次都必须输入密码，非常麻烦。好在SSH还提供了公钥登录，可以省去输入密码的步骤。")]),s._v(" "),t("p",[s._v('所谓"公钥登录"，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。')]),s._v(" "),t("p",[s._v("这种方法要求用户必须提供自己的公钥。如果没有现成的，可以直接用ssh-keygen生成一个：")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ ssh-keygen\n")])])]),t("p",[s._v("运行上面的命令以后，系统会出现一系列提示，可以一路回车。其中有一个问题是，要不要对私钥设置口令（passphrase），如果担心私钥的安全，这里可以设置一个。")]),s._v(" "),t("p",[s._v("运行结束以后，在$HOME/.ssh/目录下，会新生成两个文件：id_rsa.pub和id_rsa。前者是你的公钥，后者是你的私钥。")]),s._v(" "),t("p",[s._v("这时再输入下面的命令，将公钥传送到远程主机host上面：")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ ssh-copy-id user@host\n")])])]),t("p",[s._v("好了，从此你再登录，就不需要输入密码了。")]),s._v(" "),t("h2",{attrs:{id:"authorized-keys文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#authorized-keys文件"}},[s._v("#")]),s._v(" authorized_keys文件")]),s._v(" "),t("p",[s._v("远程主机将用户的公钥，保存在登录后的用户主目录的$HOME/.ssh/authorized_keys文件中。公钥就是一段字符串，只要把它追加在authorized_keys文件的末尾就行了。")]),s._v(" "),t("p",[s._v("这里不使用上面的ssh-copy-id命令，改用下面的命令，解释公钥的保存过程：")]),s._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("　$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" user@host "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mkdir -p .ssh && cat >> .ssh/authorized_keys'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" ~/.ssh/id_rsa.pub\n\n")])])]),t("p",[s._v('这条命令由多个语句组成，依次分解开来看：（1）"$ ssh user@host"，表示登录远程主机；（2）单引号中的mkdir .ssh && cat >> .ssh/authorized_keys，表示登录后在远程shell上执行的命令：（3）"$ mkdir -p .ssh"的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；（4）\'cat >> .ssh/authorized_keys\' < ~/.ssh/id_rsa.pub的作用是，将本地的公钥文件~/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。')]),s._v(" "),t("p",[s._v("写入authorized_keys文件后，公钥登录的设置就完成了。")])])}),[],!1,null,null,null);a.default=n.exports}}]);